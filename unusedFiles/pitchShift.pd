#N canvas 16 85 683 718 12;
#X obj 26 886 hip~ 5;
#X floatatom 8 317 4 0 100 0 - - -, f 4;
#X obj 27 833 *~;
#X floatatom 7 393 0 0 200 0 - - -;
#X obj 7 648 +~;
#X obj 6 600 samphold~;
#X obj 7 624 *~;
#X obj 172 630 r~ phase;
#X obj 357 480 s~ phase;
#X obj 94 601 r~ phase;
#X obj 42 625 r~ phase;
#X obj 8 360 s chunk-size;
#X floatatom 357 312 0 0 0 0 - - -;
#X text 124 352 chunk size;
#X text 121 366 in seconds;
#X obj 369 349 r chunk-size;
#X obj 369 374 t b f;
#X obj 172 654 -~ 0.5;
#X obj 172 678 *~ 0.5;
#X obj 172 701 cos~;
#X obj 27 917 output~;
#X text 417 1378 updated for Pd version 0.37;
#X obj 357 454 phasor~;
#X obj 7 533 s~ read-pt;
#X obj 45 648 r~ read-pt;
#X obj 444 473 +~ 0.5;
#X obj 445 499 wrap~;
#X obj 445 524 s~ phase2;
#X obj 26 862 +~;
#X text 391 313 <-- transposition \, halftones/10;
#X obj 8 337 * 0.001;
#X obj 7 485 phasor~;
#X obj 7 672 *~ 44100;
#X obj 6 575 r chunk-size;
#X obj 6 698 +~ 1;
#X floatatom 365 431 5 0 0 0 - - -, f 5;
#X obj 15 439 s precession;
#X obj 482 373 t b f;
#X obj 482 348 r precession;
#X obj 7 416 * 0.01;
#X obj 278 842 *~;
#X obj 258 657 +~;
#X obj 257 609 samphold~;
#X obj 258 633 *~;
#X obj 423 648 -~ 0.5;
#X obj 423 672 *~ 0.5;
#X obj 423 695 cos~;
#X obj 296 657 r~ read-pt;
#X obj 258 681 *~ 44100;
#X obj 278 737 tabread4~ table23;
#X obj 257 584 r chunk-size;
#X obj 257 707 +~ 1;
#X obj 345 610 r~ phase2;
#X obj 293 634 r~ phase2;
#X obj 423 624 r~ phase2;
#X text 37 393 <-- precession \, percent;
#X obj 8 273 loadbang;
#X text 158 3 TIME COMPRESSION/EXPANSION BY LOOPED SAMPLING;
#X text 111 1209 Here \, rather than ask you to push the read pointer
back and forth in the sample \, we use a phasor~. This makes it possible
to avoid the samphold~ on the read pointer (r~ read-pt) \, since \,
knowing the precession \, we can correct for it in computing the frequency
of the original phasor~ at right.;
#X text 111 1306 We've changed the control for "chunk size" to milliseconds
for added convenience \, and delayed multiplying sample location by
the sample rate (44100) until the last moment \, so that calculations
using "read-pt" and "chunk size" can be in the same units (seconds.)
;
#X msg 8 295 25;
#X floatatom 139 462 4 0 900 0 - - -, f 4;
#X obj 139 482 * 0.001;
#X text 48 317 <-- chunk size (msec);
#X obj 357 406 expr (pow(2 \, $f1/120)-$f3)/$f2;
#X obj 139 507 t b f;
#X obj 139 416 loadbang;
#X text 182 458 <-- loop length;
#X text 223 473 (msec);
#X obj 7 509 *~;
#X obj 7 461 /;
#X text 117 23 BORROWED FROM B14.SAMPLER.ROCKAFELLA.PD IN PD HELP BROWSER.
;
#X obj 357 77 inlet;
#X text 354 56 Transposition Amount (halftones/10);
#X obj 27 728 tabread4~ table23;
#X obj 108 993 outlet~;
#X obj 172 993 outlet~;
#X obj 237 993 outlet~;
#X obj 302 993 outlet~;
#X msg 139 440 900;
#X connect 0 0 20 0;
#X connect 0 0 20 1;
#X connect 1 0 30 0;
#X connect 2 0 28 0;
#X connect 3 0 39 0;
#X connect 4 0 32 0;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 17 0;
#X connect 9 0 5 1;
#X connect 10 0 6 1;
#X connect 12 0 64 0;
#X connect 15 0 16 0;
#X connect 16 0 64 0;
#X connect 16 1 64 1;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 76 0;
#X connect 22 0 8 0;
#X connect 22 0 25 0;
#X connect 24 0 4 1;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 28 0 0 0;
#X connect 30 0 11 0;
#X connect 31 0 69 0;
#X connect 32 0 34 0;
#X connect 33 0 5 0;
#X connect 34 0 75 0;
#X connect 37 0 64 0;
#X connect 37 1 64 2;
#X connect 38 0 37 0;
#X connect 39 0 36 0;
#X connect 39 0 70 0;
#X connect 40 0 28 1;
#X connect 41 0 48 0;
#X connect 42 0 43 0;
#X connect 43 0 41 0;
#X connect 44 0 45 0;
#X connect 45 0 46 0;
#X connect 46 0 78 0;
#X connect 47 0 41 1;
#X connect 48 0 51 0;
#X connect 49 0 40 0;
#X connect 50 0 42 0;
#X connect 51 0 77 0;
#X connect 52 0 42 1;
#X connect 53 0 43 1;
#X connect 54 0 44 0;
#X connect 56 0 60 0;
#X connect 60 0 1 0;
#X connect 61 0 62 0;
#X connect 62 0 65 0;
#X connect 62 0 69 1;
#X connect 64 0 22 0;
#X connect 64 0 35 0;
#X connect 65 0 70 0;
#X connect 65 1 70 1;
#X connect 66 0 79 0;
#X connect 69 0 23 0;
#X connect 70 0 31 0;
#X connect 72 0 12 0;
#X connect 74 0 2 0;
#X connect 79 0 61 0;
